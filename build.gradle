plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '3.3'
    id 'java'
    id 'jacoco'
}
java{
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sonarqube {
    properties {
        property "sonar.projectKey", "barahonachrism_nubank-authorizer"
        property "sonar.organization", "barahonachrism"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

group = 'com.nubank'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.4.2.Final"
    lombokVersion = "1.18.20"
    lombokMapstructBindingVersion = "0.2.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mapstruct:mapstruct'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.h2database:h2'

    annotationProcessor 'org.mapstruct:mapstruct-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'

    compileOnly 'org.projectlombok:lombok'
    // Test
    testImplementation 'io.cucumber:cucumber-java'
    testImplementation 'io.cucumber:cucumber-junit'
    testImplementation 'io.cucumber:cucumber-spring'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine'
    testImplementation 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

}

dependencyManagement {
    dependencies {
        dependencySet(group: 'io.cucumber', version: '7.2.3') {
            entry 'cucumber-java'
            entry 'cucumber-junit'
            entry 'cucumber-spring'
            entry 'cucumber-junit-platform-engine'
        }
        dependency 'org.junit.vintage:junit-vintage-engine:5.8.2'
        dependencySet(group: 'org.mapstruct', version: "${mapstructVersion}") {
            entry 'mapstruct'
            entry 'mapstruct-processor'
        }
        dependency 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
        dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'

        dependency "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['uk/tw/energy/App.*','uk/tw/energy/SeedingApplicationDataConfiguration.*'])
        }))
    }
}

bootRun {
    standardInput = System.in
}